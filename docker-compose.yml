version: '3.8'
services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: dating-app-postgres
    environment:
      - POSTGRES_USER=datingapp
      - POSTGRES_PASSWORD=datingapp
      - POSTGRES_DB=datingapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net

  redis:
    image: redis:7.2-alpine
    container_name: dating-app-redis
    ports:
      - "6379:6379"
    networks:
      - backend_net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: dating-app-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend_net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: dating-app-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend_net

  minio:
    image: minio/minio:RELEASE.2023-09-04T19-57-37Z
    container_name: dating-app-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - backend_net

volumes:
  postgres_data:
  minio_data:

networks:
  backend_net:
    driver: bridge
